<?php

/**
 * Routines to support installing and enabling the module.
 */

// Pick up the definitions for custom EBMS fields, loaded as globals
module_load_include('inc', 'ebms', 'includes/ebms.fields');

function ebms_enable() {

    // Done once here for all _ebms_install... functions
    node_types_rebuild();

    // Create custom event fields
    _ebms_install_add_event_fields();

    // Create categories and attach custom event fields to them
    _ebms_install_create_recent_activity();

    // Create custom user fields
    _ebms_install_add_user_fields();
}

/**
 * Load the definitions of the message types used for the Recent Activity
 * boxes on the home page. For those message types which already exist,
 * update their definitions. Create new message type entities for the others.
 */
function _ebms_install_create_recent_activity() {

    // create the 'recent activity' category type
    $category = message_type_category_load('recent_activity');
    if (!$category) {
        $category = message_type_category_create('recent_activity');
        $category->save();
    }

    require 'includes/ebms.message_types.inc';
    foreach ($pdq_ebms_recent_activity_message_types as $name => $code) {
        $message_type = entity_import('message_type', $code);
        $from_db = message_type_load($name);
        if ($from_db) {
            $message_type->id = $from_db->id;
            $message_type->is_new = false;
            db_update('message_type')
                ->fields(array('module' => 'ebms'))
                ->condition('id', $from_db->id)
                ->execute();
        }
        $message_type->module = 'ebms';
        $message_type->status = ENTITY_IN_CODE;
        $message_type->save();
    }

    global $ebms_entity_fields;
    _ebms_enable_fields($ebms_entity_fields);
}

/**
 * Create custom event fields.
 */
function _ebms_install_add_event_fields() {
    // Defined in includes/ebms.fields.inc
    global $ebms_node_fields;

    _ebms_enable_fields($ebms_node_fields);
}

/**
 * Create custom user fields.
 */
function _ebms_install_add_user_fields() {
    // Defined in includes/ebms.fields.inc
    global $ebms_user_fields;

    _ebms_enable_fields($ebms_user_fields);
}

/**
 *
 * @param type $fields
 * @return boolean
 */
function _ebms_enable_fields($fields) {
    try {
        foreach ($fields as $field) {
            $field_info = _ebms_field_info($field);
            field_read_field($field_info['field_name']) == FALSE ? field_create_field($field_info)
                        : field_update_field($field_info);
            //Add an instance of this field to each of the content types that use it.
            foreach ($field['bundles'] as $bundle) {
                $instance_info = _ebms_instance_info($field, $bundle);

                if ($instance_info) {
                    field_read_instance($instance_info['entity_type'],
                            $instance_info['field_name'],
                            $instance_info['bundle']) == FALSE ? field_create_instance($instance_info)
                                : field_update_instance($instance_info);
                } else {
                    watchdog('error',
                        t('There was a problem creating a field instance.'));
                }
            }
        }
        return TRUE;
    } catch (Exception $e) {
        watchdog_exception('EBMS - enable', $e);
        return FALSE;
    }
}

/**
 *
 * @param type $field
 * @return type
 */
function _ebms_field_info($field = array()) {

    if (empty($field))
        return;
    // Variables
    $field_info = array();

    // Create the fields
    //Required field properties
    $field_info['field_name'] = $field['field_name'];
    $field_info['type'] = $field['type'];
    //Optional field properties
    if (array_key_exists('cardinality', $field))
        $field_info['cardinality'] = $field['cardinality'];

    if (array_key_exists('label', $field))
        $field_info['label'] = $field['label'];

    if (array_key_exists('description', $field))
        $field_info['description'] = $field['description'];

    if (array_key_exists('settings', $field))
        $field_info['settings'] = $field['settings'];

    if (array_key_exists('instance_settings', $field))
        $field_info['instance_settings'] = $field['instance_settings'];

    if (array_key_exists('default_widget', $field))
        $field_info['default_widget'] = $field['default_widget'];

    if (array_key_exists('default_formatter', $field))
        $field_info['default_formatter'] = $field['default_formatter'];

    if (array_key_exists('locked', $field))
        $field_info['locked'] = $field['locked'];

    if (array_key_exists('no_ui', $field))
        $field_info['no_ui'] = $field['no_ui'];

    // Return the fields
    return $field_info;
}

/**
 *
 * @param type $field
 * @param type $bundle
 * @return type
 */
function _ebms_instance_info($field = array(), $bundle = FALSE) {

    if (empty($field) || !$bundle) {
        return;
    }

    $instance_info = array();

    //required instance fields
    $instance_info['field_name'] = $field['field_name'];
    $instance_info['entity_type'] = $field['entity_type'];
    $instance_info['bundle'] = $bundle;

    //optional instance fields
    if (array_key_exists('label', $field))
        $instance_info['label'] = $field['label'];

    if (array_key_exists('description', $field))
        $instance_info['description'] = $field['description'];

    if (array_key_exists('required', $field))
        $instance_info['required'] = $field['required'];

    if (array_key_exists('default_value_function', $field))
        $instance_info['default_value_function'] = $field['default_value_function'];

    if (array_key_exists('default_value', $field))
        $instance_info['default_value'] = $field['default_value'];

    if (array_key_exists('settings', $field))
        $instance_info['settings'] = $field['settings'];

    if (array_key_exists('widget', $field))
        $instance_info['widget'] = $field['widget'];

    if (array_key_exists('display', $field))
        $instance_info['display'] = $field['display'];

    return $instance_info;
}

function ebms_enable_test() {
    drupal_set_message('Cycling ebms + ebms_forums modules.');
    module_disable(array('ebms'));
    $ret = module_enable(array('ebms_forums'));
    if ($ret)
        $ret = module_enable(array('ebms_webforms'));

    if ($ret)
        drupal_set_message('Module enabled!');
    else
        drupal_set_message('Enable failed, check dependencies.');

    return array();
}
?>
